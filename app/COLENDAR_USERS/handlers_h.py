from aiogram import F, Router
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery, ChatMemberUpdated

from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.filters import Command

storage = MemoryStorage()

import calendar
import datetime


import keyboards as kb
from run_calendar import month_name_next



router_ = "some_value"  # –ü—Ä–∏–º–µ—Ä –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ router
# router = Router()

# handlers
# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name} !\n'
                          f'\n'
                          f'–§—É–Ω–∫—Ü–∏–∏ —Ç–µ—Å—Ç–∞ –ö–∞–ª–µ–Ω–¥–∞—Ä—è :',
                          reply_markup = await kb.current_calendar())


# async def catalog(callback: CallbackQuery):
#     await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü',
@router.callback_query(F.data == f'>_{month_name_next}')
async def next_m(callback_query: CallbackQuery):

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å)
    await callback_query.message.delete()  # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    await callback_query.message.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü',
                         reply_markup = await kb.next_calendar(month_name_next)) # –í—ã—Å–∫–∞–∫–∏–≤–∞–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ —Ü–µ–Ω—Ç—Ä–µ –∏ —Å—Ä–∞–∑—É –ø—Ä–æ–ø–∞–¥–∞–µ—Ç

    # –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –∫–æ–ª–±—ç–∫, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏" —É –∫–Ω–æ–ø–∫–∏
    await callback_query.answer()






@router.callback_query(F.data == 'contacts')
async def contacts(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –ö–æ–Ω—Ç–∞–∫—Ç—ã', show_alert=True) # –í—ã—Å–∫–∞–∫–∏–≤–∞–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ —Ü–µ–Ω—Ç—Ä–µ –∏ –∂–¥—ë—Ç –∫–æ–≥–¥–∞ –Ω–∞–∂–º—ë—Ç–µ –Ω–∞ OK
    await callback.message.answer(f'–ü—Ä–∏–≤–µ—Ç, –≤—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ - –ö–æ–Ω—Ç–∞–∫—Ç—ã !') # –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞ –ø–æ–¥ –æ–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞–º–∏

    #await callback.message.answer(f'–ü—Ä–∏–≤–µ—Ç, –≤—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ - –ö–∞—Ç–∞–ª–æ–≥ !') # –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞ –ø–æ–¥ –æ–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞–º–∏


@router.message(Command("dice"))
async def cmd_dice(message: Message):
    await message.answer_dice(emoji="üé≤")


# –¢–µ—Å—Ç –•—ç–Ω–¥–ª–µ—Ä–æ–≤

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /help
@router.message(Command('help'))
async def get_help(message: Message):
    await message.answer('–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞\n'
                         '\n'
                         '/calendar - –≤—ã–≤–µ—Å—Ç–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—å\n'
                         '/dice - –±—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫\n'
                         '/help - –ø—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–º–∞–Ω–¥\n'
                         '/start - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞\n')




# @router.my_chat_member()
# async def on_bot_added(event: ChatMemberUpdated):
#     if event.new_chat_member.status == "member":
#         chat = event.chat
#         await bot.send_message(chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ!\n\n–Ø –≥–æ—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞—Ç—å.")
#



# # –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø–∞—Ö
# @router.message(F.chat.type.in_({"group", "supergroup"}))
# async def handle_group_message(message: Message):
#     # –ü—Ä–∏–º–µ—Ä: –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ
#     await message.reply(f"–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: {message.text}")




















@router.message(Command('calendar'))
async def send_calendar(message:Message):
    await message.answer(text=f'–ö–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–∞ {calendar.month_name[int(datetime.datetime.now().strftime("%m"))]}  –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É:',
                         reply_markup = await kb.inline_calendar())


@router.callback_query(F.data == '1')
async def catalog(callback: CallbackQuery):
    await callback.answer(f'–í—ã –≤—ã–±—Ä–∞–ª–∏ - 1')


# _____________________________________________________
# –†–∞–±–æ—Ç–∞ —Å

